import jomp.runtime.OMP;
import java.util.Arrays;

public class w12_findPrime {
    static int A;
    static int B;
    static int[] arr;

    static boolean isPrime(int n) {
        if(n <= 1) return false;
        double limit = Math.sqrt(n);
        for(int i = 2; i <= limit; i++) {
            if(n % i == 0)
                return false;
        }
        return true;
    }
    static void findPrime(int from, int to){
        //omp parallel for
        for(int i = from; i < to; i++) {
            if(!isPrime(arr[i]))
                arr[i] = 0;
        }
    }

    public static void main(String [] args) {
        A = Integer.parseInt(args[0]);
        B = Integer.parseInt(args[1]);
        arr = new int[B - A + 1];
        for(int i = 0; i < arr.length; i++){
            arr[i] = A + i;
        }
        int mid = arr.length / 2;
        //omp parallel
        {
            findPrime(0, mid);
            findPrime(mid, arr.length);
        }
        Arrays.sort(arr, 0, arr.length);
        for(int i = 0; i < arr.length; i++){
            if(arr[i] != 0){
                System.out.println(arr[i]);
            }
        }
    }
}

